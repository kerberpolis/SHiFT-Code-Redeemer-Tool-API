name: FastAPI AWS CI/CD

on:
  # Trigger the workflow on push
  push:
    branches: 
      # Push events on main branch
      - master 

# The Job defines a series of steps that execute on the same runner.
jobs:
  build:
    # Define the runner used in the workflow
    runs-on: ubuntu-latest
    steps:   
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v2
      
      # Step-1 Setup Python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          # optional: architecture: x64 x64 or x86. Defaults to x64 if not specified

      # Step-2 Install Python Virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Step-3 Setup Virtual ENV
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name:  Virtual ENV
        uses: actions/cache@v2
        id: cache-venv # name for referring later
        with:
          path: venv # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements_docker.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Step-4 Build a Virtual ENV, but only if it doesn't already exist
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements_docker.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        env:
          BORDERLANDS_ENCRYPTION_KEY: ${{ secrets.BORDERLANDS_ENCRYPTION_KEY }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
          TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
          TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        # Note that you have to activate the virtualenv in every step
        # because GitHub actions doesn't preserve the environment   
        run: . venv/bin/activate && pytest -vvs app/tests


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: build and push docker image
        env:
          REPO: borderlands-fastapi
        run:  |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_BORDERLANDS_ECR }}
          docker build -t ${REPO} .
          docker tag ${REPO}:latest ${{ secrets.AWS_BORDERLANDS_ECR }}:latest
          docker push ${{ secrets.AWS_BORDERLANDS_ECR }}:latest

      - name: pull and run on ec2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_BORDERLANDS_ECR }}
            docker pull ${{ secrets.AWS_BORDERLANDS_ECR }}:latest
            docker stop borderlands-fastapi
            docker rm borderlands-fastapi
            docker run -it --rm --name borderlands-fastapi -v ~/borderlands_codes.db:/app/borderlands_codes.db --env-file ~/borderlands_codes_envs -dp 8080:8080 ${{ secrets.AWS_BORDERLANDS_ECR }}:latest
